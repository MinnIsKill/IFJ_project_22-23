# Grammar for recursive descend parser
# file : grammar_expr
# authors : Jan Lutonský, xluton02
#           Vojťech Kališ, xkalis03

prog -> PS_MARK PC_MARK prog_body

prog_body -> body_part prog_body
           | fun_def prog_body
           | EPS

prog_end -> PE_MARK EOS
          | EOS

body -> body_part body
      | EPS

body_part -> if_n
           | while_n
           | extended_expr
           | ret

extended_expr -> EXPR SEMIC 
               | EXPR_FCALL SEMIC
               | EXPR_PAR SEMIC
               | EXPR_ASSIGN SEMIC

ret -> RETURN ret_cont
ret_cont -> EXPR SEMIC
          | EXPR_PAR SEMIC
          | EXPR_FCALL SEMIC
          | SEMIC

while_n -> WHILE EXPR_PAR LBRC body RBRC

if_n -> IF EXPR_PAR LBRC body RBRC else_n
else_n -> ELSE LBRC body RBRC
        | EPS
	  
fun_def -> FUNC F_ID LPAR par_list RPAR TYPE ret_type LBRC fun_body RBRC

par_list -> type_n ID par_list_cont
          | EPS

par_list_cont -> COMMA par_list
                | EPS
			
ret_type -> type_n
          | VTYPE

type_n -> STYPE
        | ITYPE
	    | FTYPE
		| NSTYPE
		| NITYPE
		| NFTYPE
		
